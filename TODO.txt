TILEMAP CALCULATIONS:
DON't WANT to do a multiply or divide to find the map coordiantes evertime
calculate them after creating the tile map for the level
eg
if the tile map # is 3, then the cooridnates are (48*2=96, 0*48=0) = (96,0)
then would blit from lower (96,0) square of (48,48) to calculated position

MAKE THE INNER ARRAYS A TUPLE AS WELL

LEVEL EDITOR
Time to whip up a new test level with the correct formatting, remove the debugging ugliness from game to mod the level

GIT
8/27 Merged Refactor/Render to Master - Github.com claims render is ahead of Master, but this seems false (still don't delete for now)

SOFTWARE DESIGN
Write down algorithm for rendering scenery somewhere!
In Panorama render: Var Names - need better names for each variable.  Can some of the calculations be optimized?  
Should the camera tile and offset be class fields for Renderer? 
sound logging/error checking is overboard, proably don't need now that things are working well.  
  (Assume the API is correctly used by the programmer, and trust to the unit tests?) 

RENDER
	store layout and tile maps as class fields in Renderer (updated on a load level)

GAMELEVEL
	maye not need actors wrapper, but will need a sprite dictionary

TILES
Store as seperate arrays:  Lower, Upper, Event(make this a list to allow multiple events), Border
	Can make it easier to combine the tile render method.  
Store the images in a tuple for lookup, rather than a dictionary.  Use an index into the tuple (quicker than hashing a dictionary)
Each level should have a key to load the images {index: tile path}.  Do not need to iterate through all tiles, just load the tiles from the key
	eventually modify to make a pallete which slices are taken from rather than individual squares?
TESTING:
Render changed may have bugs not uncovered (like the overshoot/negative bug).  investigate
Put print statements in loops to ensure not rendering more than necessary panoramas or tiles
Experiment with smaller screen size, number of layers, etc. for speed/performance. 
Need to eventually figure out better unit testing

OPTIMIZATION
from time time() method can be used to test certain modules for speed
instead of using a dictionary, use a tuple or array for quicker lookup.
	NUMPY does not appear faster in basic list iteration
can create an array of Surfaces, then convert to a a tuple. 
can have pygame only get() relevant (chosen) events from the queue
Double Buffering?
Get rid of tyiple quotes ''' as these are strings not comments
ACTORS
Render an actor if onscreen only
Render all actors should include the actors and the scenery images to render.  These must be sorted on Y position to get proper layering when rendering
	will need to think of a good way to sort these optimally, or will impact performance

TOOLS
GIMP - learn mainly for transparency effect, then try to put in with transparency to pygame

ANIMATION
Panoramas
Tiles
Actors

HUD
Need a hud
Menus
Text Boxes (pygame tutorial has something on this)

FEATURES
need a debug window that can edit game params.  This may require a restructering of game objects 
	(game class needs to contain everything to allow references from outside to see changes) 

EVENTS
on a load level event, need to flush the event queue to prefent incorrect events from running
create an event type EventList which adds a list of events to the queue
create an event type flush queue which removes any remaining events from the queue (fix the menu bug when transitioning)
how to change tiles based on events (e.g. pull a switch to open a door)
how to have events spaced out over frames, or timed?
-NPC's and objects which can be interacted with
-how to repeate an ambiant track?


PANORAMA
